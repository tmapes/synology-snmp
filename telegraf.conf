[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "60s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  hostname = ""
  omit_hostname = true

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  urls = ["http://172.17.0.1:8086"]

  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
  database = "metrics"
  exclude_database_tag = true

[[processors.printer]]

# [[outputs.discard]]

# # Retrieves SNMP values from remote agents
[[inputs.snmp]]
  agents = ["tcp://deep.internal.mapes.info:161"]
  version = 2
  community = "public"
  retries = 3
  agent_host_tag = "hostname"

  [[inputs.snmp.field]]
    oid = ".1.3.6.1.4.1.6574.1.5.2.0"
    name = "serialNumber"
    is_tag = true

  [[inputs.snmp.field]]
    oid = ".1.3.6.1.4.1.6574.1.5.2.0"
    name = "serialNumber"

  [[inputs.snmp.field]]
    oid = ".1.3.6.1.4.1.6574.1.5.1.0"
    name = "model"

  [[inputs.snmp.field]]
    oid = ".1.3.6.1.2.1.25.1.1.0"
    name = "uptime"
    conversion = "float"

  [[inputs.snmp.field]]
    oid = ".1.3.6.1.4.1.6574.1.5.4.0"
    name = "upgradeAvailable"
    conversion = "int"

  [[inputs.snmp.field]]
    oid = ".1.3.6.1.4.1.6574.1.5.3.0"
    name = "version"

  [[inputs.snmp.table]]
    oid = "SYNOLOGY-RAID-MIB::raidTable"
    name = "raidTable"
    inherit_tags = ["serialNumber"]
    index_as_tag = false

      [[inputs.snmp.table.field]]
        oid = "SYNOLOGY-RAID-MIB::raidIndex"
        name = "raidIndex"
        is_tag = true

  [[inputs.snmp.table]]
    oid = "SYNOLOGY-DISK-MIB::diskTable"
    name = "diskTable"
    inherit_tags = ["serialNumber"]
    index_as_tag = false

      [[inputs.snmp.table.field]]
        oid = "SYNOLOGY-DISK-MIB::diskIndex"
        name = "diskIndex"
        is_tag = true

  [[inputs.snmp.table]]
    oid = "SYNOLOGY-STORAGEIO-MIB::storageIOTable"
    name = "storageIOTable"
    inherit_tags = ["serialNumber"]
    index_as_tag = true
